Original Symbol Table:
-------------------------------------------------------------------------------
| Lexeme                                | Token                                 |
-------------------------------------------------------------------------------
| return                               | RETURN                               |
| "%ld\n"                              | STRING LITERAL                       |
| printf                               | IDENTIFIER                           |
| +=                                   | ADD_ASSIGN                           |
| ==                                   | EQ_OP                                |
| }                                    | SEPERATOR                            |
| 10                                   | INTEGER                              |
| %                                    | MOD                                  |
| while                                | WHILE                                |
| *                                    | MUL                                  |
| if                                   | IF                                   |
| ;                                    | SEPERATOR                            |
| --                                   | DEC_OP                               |
| b                                    | IDENTIFIER                           |
| {                                    | SEPERATOR                            |
| "%d"                                 | STRING LITERAL                       |
| temp                                 | IDENTIFIER                           |
| )                                    | SEPERATOR                            |
| (                                    | SEPERATOR                            |
| t                                    | IDENTIFIER                           |
| main                                 | IDENTIFIER                           |
| i                                    | IDENTIFIER                           |
| =                                    | ASSIGN                               |
| int                                  | INT                                  |
| <=                                   | LE_OP                                |
| ,                                    | SEPERATOR                            |
| reverse                              | IDENTIFIER                           |
| a                                    | IDENTIFIER                           |
| for                                  | FOR                                  |
| long                                 | LONG                                 |
| s                                    | IDENTIFIER                           |
| +                                    | PLUS                                 |
| 0                                    | INTEGER                              |
| scanf                                | IDENTIFIER                           |
| &                                    | BITWISE_AND                          |
| za                                   | IDENTIFIER                           |
| "%d %d"                              | STRING LITERAL                       |
| ++                                   | INC_OP                               |
| /=                                   | DIV_ASSIGN                           |
| !=                                   | NE_OP                                |
| rem                                  | IDENTIFIER                           |
-------------------------------------------------------------------------------

seperated tokens: 
int
main
(
)
{
int
t
;
scanf
(
"%d"
,
&
t
)
;
while
(
t
--
)
{
int
a
,
b
;
int
i
;
long
*
*
s
=
0
,
za
=
a
;
scanf
(
"%d %d"
,
&
a
,
&
b
)
;
for
(
i
=
a
;
i
<=
b
;
i
++
)
{
int
reverse
=
0
;
int
rem
;
int
temp
=
i
;
while
(
temp
!=
0
)
{
rem
=
temp
%
10
;
reverse
=
reverse
*
10
+
rem
;
temp
/=
10
;
}
if
(
reverse
==
i
)
s
+=
i
;
}
printf
(
"%ld\n"
,
s
)
;
}
return
0
;
}

